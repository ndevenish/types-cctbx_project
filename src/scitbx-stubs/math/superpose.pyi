from typing import Any, Optional

def kearsley_rotation(reference_sites, other_sites): ...
def kabsch_rotation(reference_sites, other_sites): ...

class least_squares_fit:
    reference_sites: Any
    other_sites: Any
    reference_shift: Any
    other_shift: Any
    r: Any
    t: Any
    def __init__(self, reference_sites, other_sites, method: str = ...) -> None: ...
    def other_sites_best_fit(self, additional_sites: Optional[Any] = ...): ...
    def rt(self): ...

def sieve_fit(
    sites_fixed, sites_moving, selection: Optional[Any] = ..., frac_discard: float = ...
): ...

class nsd_engine:
    fixed: Any
    d_fixed: Any
    d_moving: Any
    def __init__(
        self, fixed, d_fixed: Optional[Any] = ..., d_moving: Optional[Any] = ...
    ) -> None: ...
    def get_mean_distance(self, xyz): ...
    def nsd(self, moving, d_moving: Optional[Any] = ...): ...

class nsd_rigid_body_fitter:
    fixed: Any
    moving: Any
    nsde: Any
    d_fixed: Any
    d_moving: Any
    m_com: Any
    f_com: Any
    n_mov: Any
    d: Any
    n: int
    domain: Any
    x: Any
    optimizer: Any
    def __init__(self, fixed, moving) -> None: ...
    def move_points(self, vector): ...
    def target(self, vector): ...
    def print_status(self, min_target, mean_target, best_vector, txt) -> None: ...
    def best_shifted(self): ...

def tst_nsd() -> None: ...
